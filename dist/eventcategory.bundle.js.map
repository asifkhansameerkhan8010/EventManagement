{"version":3,"file":"eventcategory.bundle.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,8DAA8D,MAAM;AACpE,gEAAgE,MAAM;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC","sources":["webpack:///./eventcategory/eventcategory.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\ndocument.addEventListener('DOMContentLoaded', function () {\n    const categoryListBody = document.getElementById('category-list-body');\n    const addCategoryForm = document.getElementById('add-category-form');\n    const categoryError = document.getElementById('category-error');\n    const categoryNameInput = document.getElementById('category-name');\n    let editingCategoryIndex = null;\n    // retrieve categories from ls\n    function getCategories() {\n        const categories = localStorage.getItem('categories_list');\n        return categories ? JSON.parse(categories) : [];\n    }\n    // save cate back to ls\n    function saveCategories(categories) {\n        localStorage.setItem('categories_list', JSON.stringify(categories));\n    }\n    // cate in the admin panel\n    function displayCategories() {\n        const categories = getCategories();\n        categoryListBody.innerHTML = '';\n        categories.forEach((category, index) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\r\n                <td>${category.name}</td>\r\n                <td>\r\n                    <button class=\"edit-button\" data-index=\"${index}\">Edit</button>\r\n                    <button class=\"delete-button\" data-index=\"${index}\">Delete</button>\r\n                </td>\r\n            `;\n            categoryListBody.appendChild(row);\n        });\n    }\n    displayCategories();\n    // Edit and Delete\n    categoryListBody.addEventListener('click', function (event) {\n        const button = event.target;\n        const index = button.getAttribute('data-index');\n        if (!index)\n            return;\n        const categories = getCategories();\n        if (button.classList.contains('edit-button')) {\n            //edit action\n            const category = categories[+index];\n            if (category) {\n                categoryNameInput.value = category.name;\n                editingCategoryIndex = +index;\n            }\n        }\n        else if (button.classList.contains('delete-button')) {\n            //delete action\n            if (confirm('Are you sure you want to delete this category?')) {\n                categories.splice(+index, 1);\n                saveCategories(categories);\n                displayCategories();\n                updateEventCategoryDropdown();\n            }\n        }\n    });\n    // adding or updating categories\n    addCategoryForm.addEventListener('submit', function (event) {\n        event.preventDefault();\n        const categoryName = categoryNameInput.value.trim();\n        if (!categoryName) {\n            categoryError.textContent = 'Category name cannot be empty!';\n            return;\n        }\n        const categories = getCategories();\n        // duplicate cate checking\n        const duplicateCategory = categories.find((category, index) => category.name.toLowerCase() === categoryName.toLowerCase() && index !== editingCategoryIndex);\n        if (duplicateCategory) {\n            categoryError.textContent = 'Category name already exists!';\n            return;\n        }\n        if (editingCategoryIndex !== null) {\n            categories[editingCategoryIndex].name = categoryName;\n            editingCategoryIndex = null;\n        }\n        else {\n            categories.push({ name: categoryName });\n        }\n        saveCategories(categories);\n        categoryError.textContent = '';\n        addCategoryForm.reset();\n        displayCategories();\n        updateEventCategoryDropdown();\n    });\n    // category dropdown USERSIDE \n    function updateEventCategoryDropdown() {\n        const eventCategorySelect = document.getElementById('event-category');\n        if (!eventCategorySelect)\n            return;\n        eventCategorySelect.innerHTML = '';\n        const categories = getCategories();\n        categories.forEach(category => {\n            const option = document.createElement('option');\n            option.value = category.name.toLowerCase();\n            option.textContent = category.name;\n            eventCategorySelect.appendChild(option);\n        });\n    }\n    updateEventCategoryDropdown();\n});\n"],"names":[],"sourceRoot":""}