{"version":3,"file":"guestManagement.bundle.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa,GAAG,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,kBAAkB,YAAY;AAC9B,kBAAkB,WAAW;AAC7B;AACA,sCAAsC,MAAM;AAC5C,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","sources":["webpack:///./guest-management/guest-management.ts"],"sourcesContent":["\"use strict\";\nvar _a;\nconst loggedInUser = localStorage.getItem('loggedInUser');\nconst urlParams = new URLSearchParams(window.location.search);\nconsole.log(window.location.search);\nconsole.log(urlParams);\nconst eventId = urlParams.get('eventId');\nconsole.log(eventId);\nif (!loggedInUser || !eventId) {\n    alert('Invalid access. Please log in and select an event.');\n    window.location.href = '../login/login.html';\n}\nconst eventGuestsKey = `guests_${loggedInUser}_${eventId}`;\nlet eventGuests = JSON.parse(localStorage.getItem(eventGuestsKey) || '[]');\nlet editingIndex = -1;\nfunction renderGuests() {\n    const guestListBody = document.getElementById('guest-list-body');\n    guestListBody.innerHTML = '';\n    eventGuests.forEach((guest, index) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `\r\n            <td>${guest.name}</td>\r\n            <td>${guest.email}</td>\r\n            <td>${guest.rsvp}</td>\r\n            <td>\r\n                <button data-index=\"${index}\" class=\"edit-button\">Edit</button>\r\n                <button data-index=\"${index}\" class=\"remove-button\">Remove</button>\r\n            </td>\r\n        `;\n        guestListBody.appendChild(row);\n    });\n    // Attach event listeners after rendering guests\n    document.querySelectorAll('.edit-button').forEach(button => {\n        button.addEventListener('click', function () {\n            const index = parseInt(this.getAttribute('data-index') || '0');\n            editGuest(index);\n        });\n    });\n    document.querySelectorAll('.remove-button').forEach(button => {\n        button.addEventListener('click', function () {\n            const index = parseInt(this.getAttribute('data-index') || '0');\n            removeGuest(index);\n        });\n    });\n}\n(_a = document.getElementById('add-guest-form')) === null || _a === void 0 ? void 0 : _a.addEventListener('submit', function (event) {\n    event.preventDefault();\n    const guestName = document.getElementById('guest-name').value;\n    const guestEmail = document.getElementById('guest-email').value;\n    const guestRSVP = document.getElementById('guest-rsvp').value;\n    // Check for email uniqueness\n    if (eventGuests.some(guest => guest.email === guestEmail && editingIndex === -1)) {\n        alert('This email is already in use. Please use a different email.');\n        return;\n    }\n    // Create or update guest object\n    const guestDetails = {\n        name: guestName,\n        email: guestEmail,\n        rsvp: guestRSVP\n    };\n    if (editingIndex > -1) {\n        eventGuests[editingIndex] = guestDetails;\n        editingIndex = -1;\n    }\n    else {\n        eventGuests.push(guestDetails);\n    }\n    // Save the updated guest list back to local storage\n    localStorage.setItem(eventGuestsKey, JSON.stringify(eventGuests));\n    this.reset();\n    document.querySelector('.add-button').textContent = 'Add Guest';\n    renderGuests();\n    alert('Guest saved successfully!');\n});\n// Remove a guest from the list\nfunction removeGuest(index) {\n    if (confirm('Are you sure you want to remove this guest?')) {\n        eventGuests.splice(index, 1);\n        localStorage.setItem(eventGuestsKey, JSON.stringify(eventGuests));\n        renderGuests();\n    }\n}\n// Edit a guest's details\nfunction editGuest(index) {\n    const guest = eventGuests[index];\n    document.getElementById('guest-name').value = guest.name;\n    document.getElementById('guest-email').value = guest.email;\n    document.getElementById('guest-rsvp').value = guest.rsvp;\n    editingIndex = index;\n    document.querySelector('.add-button').textContent = 'Update Guest';\n}\n// Send invitations function\ndocument.querySelector('.send-invites-button').addEventListener('click', function () {\n    alert('Invitations sent successfully!');\n});\nrenderGuests();\n"],"names":[],"sourceRoot":""}